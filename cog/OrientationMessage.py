# automatically generated by the FlatBuffers compiler, do not modify

# namespace: cog

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class OrientationMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OrientationMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOrientationMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # OrientationMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OrientationMessage
    def Azimuth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # OrientationMessage
    def Pitch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # OrientationMessage
    def Roll(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def OrientationMessageStart(builder): builder.StartObject(3)
def Start(builder):
    return OrientationMessageStart(builder)
def OrientationMessageAddAzimuth(builder, azimuth): builder.PrependFloat32Slot(0, azimuth, 0.0)
def AddAzimuth(builder, azimuth):
    return OrientationMessageAddAzimuth(builder, azimuth)
def OrientationMessageAddPitch(builder, pitch): builder.PrependFloat32Slot(1, pitch, 0.0)
def AddPitch(builder, pitch):
    return OrientationMessageAddPitch(builder, pitch)
def OrientationMessageAddRoll(builder, roll): builder.PrependFloat32Slot(2, roll, 0.0)
def AddRoll(builder, roll):
    return OrientationMessageAddRoll(builder, roll)
def OrientationMessageEnd(builder): return builder.EndObject()
def End(builder):
    return OrientationMessageEnd(builder)